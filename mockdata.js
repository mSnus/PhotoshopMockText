// =======================================================
var idmove = charIDToTypeID( "move" );
    var desc1422 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref364 = new ActionReference();
        var idLyr = charIDToTypeID( "Lyr " );
        var idOrdn = charIDToTypeID( "Ordn" );
        var idTrgt = charIDToTypeID( "Trgt" );
        ref364.putEnumerated( idLyr, idOrdn, idTrgt );
    desc1422.putReference( idnull, ref364 );
    var idT = charIDToTypeID( "T   " );
        var desc1423 = new ActionDescriptor();
        var idHrzn = charIDToTypeID( "Hrzn" );
        var idPxl = charIDToTypeID( "#Pxl" );
        desc1423.putUnitDouble( idHrzn, idPxl, -1.000000 );
        var idVrtc = charIDToTypeID( "Vrtc" );
        var idPxl = charIDToTypeID( "#Pxl" );
        desc1423.putUnitDouble( idVrtc, idPxl, 0.000000 );
    var idOfst = charIDToTypeID( "Ofst" );
    desc1422.putObject( idT, idOfst, desc1423 );
executeAction( idmove, desc1422, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc1424 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref365 = new ActionReference();
        var idtypeCreateOrEditTool = stringIDToTypeID( "typeCreateOrEditTool" );
        ref365.putClass( idtypeCreateOrEditTool );
    desc1424.putReference( idnull, ref365 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc1424.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc1424.putBoolean( idforceNotify, true );
executeAction( idslct, desc1424, DialogModes.NO );

// =======================================================
var idtoolModalStateChanged = stringIDToTypeID( "toolModalStateChanged" );
    var desc1425 = new ActionDescriptor();
    var idLvl = charIDToTypeID( "Lvl " );
    desc1425.putInteger( idLvl, 1 );
    var idStte = charIDToTypeID( "Stte" );
    var idStte = charIDToTypeID( "Stte" );
    var identer = stringIDToTypeID( "enter" );
    desc1425.putEnumerated( idStte, idStte, identer );
    var idTool = charIDToTypeID( "Tool" );
        var desc1426 = new ActionDescriptor();
        var idIdnt = charIDToTypeID( "Idnt" );
        desc1426.putString( idIdnt, """txBx""" );
        var idTtl = charIDToTypeID( "Ttl " );
        desc1426.putString( idTtl, """Horizontal Type Tool""" );
    var idTool = charIDToTypeID( "Tool" );
    desc1425.putObject( idTool, idTool, desc1426 );
    var idKnd = charIDToTypeID( "Knd " );
    var idKnd = charIDToTypeID( "Knd " );
    var idmouse = stringIDToTypeID( "mouse" );
    desc1425.putEnumerated( idKnd, idKnd, idmouse );
    var idkcanDispatchWhileModal = stringIDToTypeID( "kcanDispatchWhileModal" );
    desc1425.putBoolean( idkcanDispatchWhileModal, true );
executeAction( idtoolModalStateChanged, desc1425, DialogModes.NO );

// =======================================================
var idtoolModalStateChanged = stringIDToTypeID( "toolModalStateChanged" );
    var desc1427 = new ActionDescriptor();
    var idLvl = charIDToTypeID( "Lvl " );
    desc1427.putInteger( idLvl, 0 );
    var idStte = charIDToTypeID( "Stte" );
    var idStte = charIDToTypeID( "Stte" );
    var idexit = stringIDToTypeID( "exit" );
    desc1427.putEnumerated( idStte, idStte, idexit );
    var idTool = charIDToTypeID( "Tool" );
        var desc1428 = new ActionDescriptor();
        var idIdnt = charIDToTypeID( "Idnt" );
        desc1428.putString( idIdnt, """txBx""" );
        var idTtl = charIDToTypeID( "Ttl " );
        desc1428.putString( idTtl, """Horizontal Type Tool""" );
    var idTool = charIDToTypeID( "Tool" );
    desc1427.putObject( idTool, idTool, desc1428 );
    var idKnd = charIDToTypeID( "Knd " );
    var idKnd = charIDToTypeID( "Knd " );
    var idmouse = stringIDToTypeID( "mouse" );
    desc1427.putEnumerated( idKnd, idKnd, idmouse );
    var idkcanDispatchWhileModal = stringIDToTypeID( "kcanDispatchWhileModal" );
    desc1427.putBoolean( idkcanDispatchWhileModal, true );
executeAction( idtoolModalStateChanged, desc1427, DialogModes.NO );

// =======================================================
var idtoolModalStateChanged = stringIDToTypeID( "toolModalStateChanged" );
    var desc1429 = new ActionDescriptor();
    var idLvl = charIDToTypeID( "Lvl " );
    desc1429.putInteger( idLvl, 1 );
    var idStte = charIDToTypeID( "Stte" );
    var idStte = charIDToTypeID( "Stte" );
    var identer = stringIDToTypeID( "enter" );
    desc1429.putEnumerated( idStte, idStte, identer );
    var idTool = charIDToTypeID( "Tool" );
        var desc1430 = new ActionDescriptor();
        var idIdnt = charIDToTypeID( "Idnt" );
        desc1430.putString( idIdnt, """txBx""" );
        var idTtl = charIDToTypeID( "Ttl " );
        desc1430.putString( idTtl, """Horizontal Type Tool""" );
    var idTool = charIDToTypeID( "Tool" );
    desc1429.putObject( idTool, idTool, desc1430 );
    var idKnd = charIDToTypeID( "Knd " );
    var idKnd = charIDToTypeID( "Knd " );
    var idTool = charIDToTypeID( "Tool" );
    desc1429.putEnumerated( idKnd, idKnd, idTool );
    var idkcanDispatchWhileModal = stringIDToTypeID( "kcanDispatchWhileModal" );
    desc1429.putBoolean( idkcanDispatchWhileModal, true );
executeAction( idtoolModalStateChanged, desc1429, DialogModes.NO );

// =======================================================
var idtoolModalStateChanged = stringIDToTypeID( "toolModalStateChanged" );
    var desc1431 = new ActionDescriptor();
    var idLvl = charIDToTypeID( "Lvl " );
    desc1431.putInteger( idLvl, 0 );
    var idStte = charIDToTypeID( "Stte" );
    var idStte = charIDToTypeID( "Stte" );
    var idexit = stringIDToTypeID( "exit" );
    desc1431.putEnumerated( idStte, idStte, idexit );
    var idTool = charIDToTypeID( "Tool" );
        var desc1432 = new ActionDescriptor();
        var idIdnt = charIDToTypeID( "Idnt" );
        desc1432.putString( idIdnt, """txBx""" );
        var idTtl = charIDToTypeID( "Ttl " );
        desc1432.putString( idTtl, """Horizontal Type Tool""" );
    var idTool = charIDToTypeID( "Tool" );
    desc1431.putObject( idTool, idTool, desc1432 );
    var idKnd = charIDToTypeID( "Knd " );
    var idKnd = charIDToTypeID( "Knd " );
    var idTool = charIDToTypeID( "Tool" );
    desc1431.putEnumerated( idKnd, idKnd, idTool );
    var idreason = stringIDToTypeID( "reason" );
    var idreason = stringIDToTypeID( "reason" );
    var idcommit = stringIDToTypeID( "commit" );
    desc1431.putEnumerated( idreason, idreason, idcommit );
    var idkcanDispatchWhileModal = stringIDToTypeID( "kcanDispatchWhileModal" );
    desc1431.putBoolean( idkcanDispatchWhileModal, true );
executeAction( idtoolModalStateChanged, desc1431, DialogModes.NO );

// =======================================================
var idMk = charIDToTypeID( "Mk  " );
    var desc1433 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref366 = new ActionReference();
        var idTxLr = charIDToTypeID( "TxLr" );
        ref366.putClass( idTxLr );
    desc1433.putReference( idnull, ref366 );
    var idUsng = charIDToTypeID( "Usng" );
        var desc1434 = new ActionDescriptor();
        var idTxt = charIDToTypeID( "Txt " );
        desc1434.putString( idTxt, """some text ;ayer""" );
        var idwarp = stringIDToTypeID( "warp" );
            var desc1435 = new ActionDescriptor();
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpStyle = stringIDToTypeID( "warpStyle" );
            var idwarpNone = stringIDToTypeID( "warpNone" );
            desc1435.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );
            var idwarpValue = stringIDToTypeID( "warpValue" );
            desc1435.putDouble( idwarpValue, 0.000000 );
            var idwarpPerspective = stringIDToTypeID( "warpPerspective" );
            desc1435.putDouble( idwarpPerspective, 0.000000 );
            var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );
            desc1435.putDouble( idwarpPerspectiveOther, 0.000000 );
            var idwarpRotate = stringIDToTypeID( "warpRotate" );
            var idOrnt = charIDToTypeID( "Ornt" );
            var idHrzn = charIDToTypeID( "Hrzn" );
            desc1435.putEnumerated( idwarpRotate, idOrnt, idHrzn );
        var idwarp = stringIDToTypeID( "warp" );
        desc1434.putObject( idwarp, idwarp, desc1435 );
        var idTxtC = charIDToTypeID( "TxtC" );
            var desc1436 = new ActionDescriptor();
            var idHrzn = charIDToTypeID( "Hrzn" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc1436.putUnitDouble( idHrzn, idPrc, 40.786638 );
            var idVrtc = charIDToTypeID( "Vrtc" );
            var idPrc = charIDToTypeID( "#Prc" );
            desc1436.putUnitDouble( idVrtc, idPrc, 41.602564 );
        var idPnt = charIDToTypeID( "Pnt " );
        desc1434.putObject( idTxtC, idPnt, desc1436 );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idtextGridding = stringIDToTypeID( "textGridding" );
        var idNone = charIDToTypeID( "None" );
        desc1434.putEnumerated( idtextGridding, idtextGridding, idNone );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idOrnt = charIDToTypeID( "Ornt" );
        var idHrzn = charIDToTypeID( "Hrzn" );
        desc1434.putEnumerated( idOrnt, idOrnt, idHrzn );
        var idAntA = charIDToTypeID( "AntA" );
        var idAnnt = charIDToTypeID( "Annt" );
        var idAnCr = charIDToTypeID( "AnCr" );
        desc1434.putEnumerated( idAntA, idAnnt, idAnCr );
        var idbounds = stringIDToTypeID( "bounds" );
            var desc1437 = new ActionDescriptor();
            var idLeft = charIDToTypeID( "Left" );
            var idPxl = charIDToTypeID( "#Pxl" );
            desc1437.putUnitDouble( idLeft, idPxl, 0.000000 );
            var idTop = charIDToTypeID( "Top " );
            var idPxl = charIDToTypeID( "#Pxl" );
            desc1437.putUnitDouble( idTop, idPxl, -11.156006 );
            var idRght = charIDToTypeID( "Rght" );
            var idPxl = charIDToTypeID( "#Pxl" );
            desc1437.putUnitDouble( idRght, idPxl, 89.048889 );
            var idBtom = charIDToTypeID( "Btom" );
            var idPxl = charIDToTypeID( "#Pxl" );
            desc1437.putUnitDouble( idBtom, idPxl, 4.221191 );
        var idbounds = stringIDToTypeID( "bounds" );
        desc1434.putObject( idbounds, idbounds, desc1437 );
        var idboundingBox = stringIDToTypeID( "boundingBox" );
            var desc1438 = new ActionDescriptor();
            var idLeft = charIDToTypeID( "Left" );
            var idPxl = charIDToTypeID( "#Pxl" );
            desc1438.putUnitDouble( idLeft, idPxl, 1.000000 );
            var idTop = charIDToTypeID( "Top " );
            var idPxl = charIDToTypeID( "#Pxl" );
            desc1438.putUnitDouble( idTop, idPxl, -9.359375 );
            var idRght = charIDToTypeID( "Rght" );
            var idPxl = charIDToTypeID( "#Pxl" );
            desc1438.putUnitDouble( idRght, idPxl, 88.538086 );
            var idBtom = charIDToTypeID( "Btom" );
            var idPxl = charIDToTypeID( "#Pxl" );
            desc1438.putUnitDouble( idBtom, idPxl, 3.000000 );
        var idboundingBox = stringIDToTypeID( "boundingBox" );
        desc1434.putObject( idboundingBox, idboundingBox, desc1438 );
        var idtextShape = stringIDToTypeID( "textShape" );
            var list258 = new ActionList();
                var desc1439 = new ActionDescriptor();
                var idTEXT = charIDToTypeID( "TEXT" );
                var idTEXT = charIDToTypeID( "TEXT" );
                var idPnt = charIDToTypeID( "Pnt " );
                desc1439.putEnumerated( idTEXT, idTEXT, idPnt );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idOrnt = charIDToTypeID( "Ornt" );
                var idHrzn = charIDToTypeID( "Hrzn" );
                desc1439.putEnumerated( idOrnt, idOrnt, idHrzn );
                var idTrnf = charIDToTypeID( "Trnf" );
                    var desc1440 = new ActionDescriptor();
                    var idxx = stringIDToTypeID( "xx" );
                    desc1440.putDouble( idxx, 1.000000 );
                    var idxy = stringIDToTypeID( "xy" );
                    desc1440.putDouble( idxy, 0.000000 );
                    var idyx = stringIDToTypeID( "yx" );
                    desc1440.putDouble( idyx, 0.000000 );
                    var idyy = stringIDToTypeID( "yy" );
                    desc1440.putDouble( idyy, 1.000000 );
                    var idtx = stringIDToTypeID( "tx" );
                    desc1440.putDouble( idtx, 0.000000 );
                    var idty = stringIDToTypeID( "ty" );
                    desc1440.putDouble( idty, 0.000000 );
                var idTrnf = charIDToTypeID( "Trnf" );
                desc1439.putObject( idTrnf, idTrnf, desc1440 );
                var idrowCount = stringIDToTypeID( "rowCount" );
                desc1439.putInteger( idrowCount, 1 );
                var idcolumnCount = stringIDToTypeID( "columnCount" );
                desc1439.putInteger( idcolumnCount, 1 );
                var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );
                desc1439.putBoolean( idrowMajorOrder, true );
                var idrowGutter = stringIDToTypeID( "rowGutter" );
                var idPxl = charIDToTypeID( "#Pxl" );
                desc1439.putUnitDouble( idrowGutter, idPxl, 0.000000 );
                var idcolumnGutter = stringIDToTypeID( "columnGutter" );
                var idPxl = charIDToTypeID( "#Pxl" );
                desc1439.putUnitDouble( idcolumnGutter, idPxl, 0.000000 );
                var idSpcn = charIDToTypeID( "Spcn" );
                var idPxl = charIDToTypeID( "#Pxl" );
                desc1439.putUnitDouble( idSpcn, idPxl, 0.000000 );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );
                var idalignByAscent = stringIDToTypeID( "alignByAscent" );
                desc1439.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );
                var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );
                var idPxl = charIDToTypeID( "#Pxl" );
                desc1439.putUnitDouble( idfirstBaselineMinimum, idPxl, 0.000000 );
                var idbase = stringIDToTypeID( "base" );
                    var desc1441 = new ActionDescriptor();
                    var idHrzn = charIDToTypeID( "Hrzn" );
                    desc1441.putDouble( idHrzn, 0.000000 );
                    var idVrtc = charIDToTypeID( "Vrtc" );
                    desc1441.putDouble( idVrtc, 0.000000 );
                var idPnt = charIDToTypeID( "Pnt " );
                desc1439.putObject( idbase, idPnt, desc1441 );
            var idtextShape = stringIDToTypeID( "textShape" );
            list258.putObject( idtextShape, desc1439 );
        desc1434.putList( idtextShape, list258 );
        var idTxtt = charIDToTypeID( "Txtt" );
            var list259 = new ActionList();
                var desc1442 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc1442.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc1442.putInteger( idT, 16 );
                var idTxtS = charIDToTypeID( "TxtS" );
                    var desc1443 = new ActionDescriptor();
                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
                    desc1443.putBoolean( idstyleSheetHasParent, true );
                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                    desc1443.putString( idfontPostScriptName, """ArialMT""" );
                    var idFntN = charIDToTypeID( "FntN" );
                    desc1443.putString( idFntN, """Arial""" );
                    var idFntS = charIDToTypeID( "FntS" );
                    desc1443.putString( idFntS, """Regular""" );
                    var idScrp = charIDToTypeID( "Scrp" );
                    desc1443.putInteger( idScrp, 0 );
                    var idFntT = charIDToTypeID( "FntT" );
                    desc1443.putInteger( idFntT, 1 );
                    var idfontAvailable = stringIDToTypeID( "fontAvailable" );
                    desc1443.putBoolean( idfontAvailable, true );
                    var idSz = charIDToTypeID( "Sz  " );
                    var idPxl = charIDToTypeID( "#Pxl" );
                    desc1443.putUnitDouble( idSz, idPxl, 13.000000 );
                    var idimpliedFontSize = stringIDToTypeID( "impliedFontSize" );
                    var idPxl = charIDToTypeID( "#Pxl" );
                    desc1443.putUnitDouble( idimpliedFontSize, idPxl, 13.000000 );
                    var iddigitSet = stringIDToTypeID( "digitSet" );
                    var iddigitSet = stringIDToTypeID( "digitSet" );
                    var iddefaultDigits = stringIDToTypeID( "defaultDigits" );
                    desc1443.putEnumerated( iddigitSet, iddigitSet, iddefaultDigits );
                    var idmarkYDistFromBaseline = stringIDToTypeID( "markYDistFromBaseline" );
                    var idPxl = charIDToTypeID( "#Pxl" );
                    desc1443.putUnitDouble( idmarkYDistFromBaseline, idPxl, 100.000000 );
                    var idClr = charIDToTypeID( "Clr " );
                        var desc1444 = new ActionDescriptor();
                        var idRd = charIDToTypeID( "Rd  " );
                        desc1444.putDouble( idRd, 103.818151 );
                        var idGrn = charIDToTypeID( "Grn " );
                        desc1444.putDouble( idGrn, 104.435253 );
                        var idBl = charIDToTypeID( "Bl  " );
                        desc1444.putDouble( idBl, 121.999651 );
                    var idRGBC = charIDToTypeID( "RGBC" );
                    desc1443.putObject( idClr, idRGBC, desc1444 );
                    var idbaseParentStyle = stringIDToTypeID( "baseParentStyle" );
                        var desc1445 = new ActionDescriptor();
                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );
                        desc1445.putString( idfontPostScriptName, """MyriadPro-Regular""" );
                        var idFntN = charIDToTypeID( "FntN" );
                        desc1445.putString( idFntN, """Myriad Pro""" );
                        var idFntS = charIDToTypeID( "FntS" );
                        desc1445.putString( idFntS, """Regular""" );
                        var idScrp = charIDToTypeID( "Scrp" );
                        desc1445.putInteger( idScrp, 0 );
                        var idFntT = charIDToTypeID( "FntT" );
                        desc1445.putInteger( idFntT, 0 );
                        var idfontAvailable = stringIDToTypeID( "fontAvailable" );
                        desc1445.putBoolean( idfontAvailable, true );
                        var idSz = charIDToTypeID( "Sz  " );
                        var idPxl = charIDToTypeID( "#Pxl" );
                        desc1445.putUnitDouble( idSz, idPxl, 12.000000 );
                        var idimpliedFontSize = stringIDToTypeID( "impliedFontSize" );
                        var idPxl = charIDToTypeID( "#Pxl" );
                        desc1445.putUnitDouble( idimpliedFontSize, idPxl, 12.000000 );
                        var idHrzS = charIDToTypeID( "HrzS" );
                        desc1445.putDouble( idHrzS, 100.000000 );
                        var idVrtS = charIDToTypeID( "VrtS" );
                        desc1445.putDouble( idVrtS, 100.000000 );
                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );
                        desc1445.putBoolean( idsyntheticBold, false );
                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );
                        desc1445.putBoolean( idsyntheticItalic, false );
                        var idautoLeading = stringIDToTypeID( "autoLeading" );
                        desc1445.putBoolean( idautoLeading, true );
                        var idTrck = charIDToTypeID( "Trck" );
                        desc1445.putInteger( idTrck, 0 );
                        var idBsln = charIDToTypeID( "Bsln" );
                        var idPxl = charIDToTypeID( "#Pxl" );
                        desc1445.putUnitDouble( idBsln, idPxl, 0.000000 );
                        var idimpliedBaselineShift = stringIDToTypeID( "impliedBaselineShift" );
                        var idPxl = charIDToTypeID( "#Pxl" );
                        desc1445.putUnitDouble( idimpliedBaselineShift, idPxl, 0.000000 );
                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );
                        desc1445.putDouble( idcharacterRotation, 0.000000 );
                        var idAtKr = charIDToTypeID( "AtKr" );
                        var idAtKr = charIDToTypeID( "AtKr" );
                        var idmetricsKern = stringIDToTypeID( "metricsKern" );
                        desc1445.putEnumerated( idAtKr, idAtKr, idmetricsKern );
                        var idfontCaps = stringIDToTypeID( "fontCaps" );
                        var idfontCaps = stringIDToTypeID( "fontCaps" );
                        var idNrml = charIDToTypeID( "Nrml" );
                        desc1445.putEnumerated( idfontCaps, idfontCaps, idNrml );
                        var iddigitSet = stringIDToTypeID( "digitSet" );
                        var iddigitSet = stringIDToTypeID( "digitSet" );
                        var iddefaultDigits = stringIDToTypeID( "defaultDigits" );
                        desc1445.putEnumerated( iddigitSet, iddigitSet, iddefaultDigits );
                        var iddirOverride = stringIDToTypeID( "dirOverride" );
                        var iddirOverride = stringIDToTypeID( "dirOverride" );
                        var iddirOverrideDefault = stringIDToTypeID( "dirOverrideDefault" );
                        desc1445.putEnumerated( iddirOverride, iddirOverride, iddirOverrideDefault );
                        var idkashidas = stringIDToTypeID( "kashidas" );
                        var idkashidas = stringIDToTypeID( "kashidas" );
                        var idkashidaDefault = stringIDToTypeID( "kashidaDefault" );
                        desc1445.putEnumerated( idkashidas, idkashidas, idkashidaDefault );
                        var iddiacVPos = stringIDToTypeID( "diacVPos" );
                        var iddiacVPos = stringIDToTypeID( "diacVPos" );
                        var iddiacVPosOpenType = stringIDToTypeID( "diacVPosOpenType" );
                        desc1445.putEnumerated( iddiacVPos, iddiacVPos, iddiacVPosOpenType );
                        var iddiacXOffset = stringIDToTypeID( "diacXOffset" );
                        var idPxl = charIDToTypeID( "#Pxl" );
                        desc1445.putUnitDouble( iddiacXOffset, idPxl, 0.000000 );
                        var iddiacYOffset = stringIDToTypeID( "diacYOffset" );
                        var idPxl = charIDToTypeID( "#Pxl" );
                        desc1445.putUnitDouble( iddiacYOffset, idPxl, 0.000000 );
                        var idmarkYDistFromBaseline = stringIDToTypeID( "markYDistFromBaseline" );
                        var idPxl = charIDToTypeID( "#Pxl" );
                        desc1445.putUnitDouble( idmarkYDistFromBaseline, idPxl, 100.000000 );
                        var idbaseline = stringIDToTypeID( "baseline" );
                        var idbaseline = stringIDToTypeID( "baseline" );
                        var idNrml = charIDToTypeID( "Nrml" );
                        desc1445.putEnumerated( idbaseline, idbaseline, idNrml );
                        var idotbaseline = stringIDToTypeID( "otbaseline" );
                        var idotbaseline = stringIDToTypeID( "otbaseline" );
                        var idNrml = charIDToTypeID( "Nrml" );
                        desc1445.putEnumerated( idotbaseline, idotbaseline, idNrml );
                        var idstrikethrough = stringIDToTypeID( "strikethrough" );
                        var idstrikethrough = stringIDToTypeID( "strikethrough" );
                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );
                        desc1445.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );
                        var idUndl = charIDToTypeID( "Undl" );
                        var idUndl = charIDToTypeID( "Undl" );
                        var idunderlineOff = stringIDToTypeID( "underlineOff" );
                        desc1445.putEnumerated( idUndl, idUndl, idunderlineOff );
                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );
                        var idPxl = charIDToTypeID( "#Pxl" );
                        desc1445.putUnitDouble( idunderlineOffset, idPxl, 0.000000 );
                        var idligature = stringIDToTypeID( "ligature" );
                        desc1445.putBoolean( idligature, true );
                        var idaltligature = stringIDToTypeID( "altligature" );
                        desc1445.putBoolean( idaltligature, false );
                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );
                        desc1445.putBoolean( idcontextualLigatures, false );
                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );
                        desc1445.putBoolean( idalternateLigatures, false );
                        var idoldStyle = stringIDToTypeID( "oldStyle" );
                        desc1445.putBoolean( idoldStyle, false );
                        var idfractions = stringIDToTypeID( "fractions" );
                        desc1445.putBoolean( idfractions, false );
                        var idordinals = stringIDToTypeID( "ordinals" );
                        desc1445.putBoolean( idordinals, false );
                        var idswash = stringIDToTypeID( "swash" );
                        desc1445.putBoolean( idswash, false );
                        var idtitling = stringIDToTypeID( "titling" );
                        desc1445.putBoolean( idtitling, false );
                        var idconnectionForms = stringIDToTypeID( "connectionForms" );
                        desc1445.putBoolean( idconnectionForms, false );
                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );
                        desc1445.putBoolean( idstylisticAlternates, false );
                        var idornaments = stringIDToTypeID( "ornaments" );
                        desc1445.putBoolean( idornaments, false );
                        var idjustificationAlternates = stringIDToTypeID( "justificationAlternates" );
                        desc1445.putBoolean( idjustificationAlternates, false );
                        var idfigureStyle = stringIDToTypeID( "figureStyle" );
                        var idfigureStyle = stringIDToTypeID( "figureStyle" );
                        var idNrml = charIDToTypeID( "Nrml" );
                        desc1445.putEnumerated( idfigureStyle, idfigureStyle, idNrml );
                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );
                        desc1445.putBoolean( idproportionalMetrics, false );
                        var idkana = stringIDToTypeID( "kana" );
                        desc1445.putBoolean( idkana, false );
                        var iditalics = stringIDToTypeID( "italics" );
                        desc1445.putBoolean( iditalics, false );
                        var idruby = stringIDToTypeID( "ruby" );
                        desc1445.putBoolean( idruby, false );
                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );
                        var idrotated = stringIDToTypeID( "rotated" );
                        desc1445.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );
                        var idtextLanguage = stringIDToTypeID( "textLanguage" );
                        var idtextLanguage = stringIDToTypeID( "textLanguage" );
                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );
                        desc1445.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );
                        var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                        var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );
                        var iddefaultForm = stringIDToTypeID( "defaultForm" );
                        desc1445.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );
                        var idmojiZume = stringIDToTypeID( "mojiZume" );
                        desc1445.putDouble( idmojiZume, 0.000000 );
                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );
                        var idroman = stringIDToTypeID( "roman" );
                        desc1445.putEnumerated( idgridAlignment, idgridAlignment, idroman );
                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );
                        desc1445.putBoolean( idenableWariChu, false );
                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );
                        desc1445.putInteger( idwariChuCount, 2 );
                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );
                        desc1445.putInteger( idwariChuLineGap, 0 );
                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );
                        desc1445.putDouble( idwariChuScale, 0.500000 );
                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );
                        desc1445.putInteger( idwariChuWidow, 2 );
                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );
                        desc1445.putInteger( idwariChuOrphan, 2 );
                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );
                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );
                        desc1445.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );
                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );
                        desc1445.putInteger( idtcyUpDown, 0 );
                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );
                        desc1445.putInteger( idtcyLeftRight, 0 );
                        var idleftAki = stringIDToTypeID( "leftAki" );
                        desc1445.putDouble( idleftAki, -1.000000 );
                        var idrightAki = stringIDToTypeID( "rightAki" );
                        desc1445.putDouble( idrightAki, -1.000000 );
                        var idjiDori = stringIDToTypeID( "jiDori" );
                        desc1445.putInteger( idjiDori, 0 );
                        var idnoBreak = stringIDToTypeID( "noBreak" );
                        desc1445.putBoolean( idnoBreak, false );
                        var idClr = charIDToTypeID( "Clr " );
                            var desc1446 = new ActionDescriptor();
                            var idRd = charIDToTypeID( "Rd  " );
                            desc1446.putDouble( idRd, 0.000000 );
                            var idGrn = charIDToTypeID( "Grn " );
                            desc1446.putDouble( idGrn, 0.000000 );
                            var idBl = charIDToTypeID( "Bl  " );
                            desc1446.putDouble( idBl, 0.000000 );
                        var idRGBC = charIDToTypeID( "RGBC" );
                        desc1445.putObject( idClr, idRGBC, desc1446 );
                        var idstrokeColor = stringIDToTypeID( "strokeColor" );
                            var desc1447 = new ActionDescriptor();
                            var idRd = charIDToTypeID( "Rd  " );
                            desc1447.putDouble( idRd, 0.000000 );
                            var idGrn = charIDToTypeID( "Grn " );
                            desc1447.putDouble( idGrn, 0.000000 );
                            var idBl = charIDToTypeID( "Bl  " );
                            desc1447.putDouble( idBl, 0.000000 );
                        var idRGBC = charIDToTypeID( "RGBC" );
                        desc1445.putObject( idstrokeColor, idRGBC, desc1447 );
                        var idFl = charIDToTypeID( "Fl  " );
                        desc1445.putBoolean( idFl, true );
                        var idStrk = charIDToTypeID( "Strk" );
                        desc1445.putBoolean( idStrk, false );
                        var idfillFirst = stringIDToTypeID( "fillFirst" );
                        desc1445.putBoolean( idfillFirst, true );
                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );
                        desc1445.putBoolean( idfillOverPrint, false );
                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );
                        desc1445.putBoolean( idstrokeOverPrint, false );
                        var idlineCap = stringIDToTypeID( "lineCap" );
                        var idlineCap = stringIDToTypeID( "lineCap" );
                        var idbuttCap = stringIDToTypeID( "buttCap" );
                        desc1445.putEnumerated( idlineCap, idlineCap, idbuttCap );
                        var idlineJoin = stringIDToTypeID( "lineJoin" );
                        var idlineJoin = stringIDToTypeID( "lineJoin" );
                        var idmiterJoin = stringIDToTypeID( "miterJoin" );
                        desc1445.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );
                        var idlineWidth = stringIDToTypeID( "lineWidth" );
                        var idPxl = charIDToTypeID( "#Pxl" );
                        desc1445.putUnitDouble( idlineWidth, idPxl, 1.000000 );
                        var idmiterLimit = stringIDToTypeID( "miterLimit" );
                        var idPxl = charIDToTypeID( "#Pxl" );
                        desc1445.putUnitDouble( idmiterLimit, idPxl, 4.000000 );
                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );
                        desc1445.putDouble( idlineDashoffset, 0.000000 );
                    var idTxtS = charIDToTypeID( "TxtS" );
                    desc1443.putObject( idbaseParentStyle, idTxtS, desc1445 );
                var idTxtS = charIDToTypeID( "TxtS" );
                desc1442.putObject( idTxtS, idTxtS, desc1443 );
            var idTxtt = charIDToTypeID( "Txtt" );
            list259.putObject( idTxtt, desc1442 );
        desc1434.putList( idTxtt, list259 );
        var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            var list260 = new ActionList();
                var desc1448 = new ActionDescriptor();
                var idFrom = charIDToTypeID( "From" );
                desc1448.putInteger( idFrom, 0 );
                var idT = charIDToTypeID( "T   " );
                desc1448.putInteger( idT, 16 );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                    var desc1449 = new ActionDescriptor();
                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );
                    desc1449.putBoolean( idstyleSheetHasParent, true );
                    var idhyphenate = stringIDToTypeID( "hyphenate" );
                    desc1449.putBoolean( idhyphenate, true );
                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );
                desc1448.putObject( idparagraphStyle, idparagraphStyle, desc1449 );
            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );
            list260.putObject( idparagraphStyleRange, desc1448 );
        desc1434.putList( idparagraphStyleRange, list260 );
        var idkerningRange = stringIDToTypeID( "kerningRange" );
            var list261 = new ActionList();
        desc1434.putList( idkerningRange, list261 );
    var idTxLr = charIDToTypeID( "TxLr" );
    desc1433.putObject( idUsng, idTxLr, desc1434 );
    var idLyrI = charIDToTypeID( "LyrI" );
    desc1433.putInteger( idLyrI, 610 );
executeAction( idMk, desc1433, DialogModes.NO );

// =======================================================
var idslct = charIDToTypeID( "slct" );
    var desc1450 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref367 = new ActionReference();
        var idmoveTool = stringIDToTypeID( "moveTool" );
        ref367.putClass( idmoveTool );
    desc1450.putReference( idnull, ref367 );
    var iddontRecord = stringIDToTypeID( "dontRecord" );
    desc1450.putBoolean( iddontRecord, true );
    var idforceNotify = stringIDToTypeID( "forceNotify" );
    desc1450.putBoolean( idforceNotify, true );
executeAction( idslct, desc1450, DialogModes.NO );

// =======================================================
var idCpTL = charIDToTypeID( "CpTL" );
executeAction( idCpTL, undefined, DialogModes.NO );

// =======================================================
var idmove = charIDToTypeID( "move" );
    var desc1451 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref368 = new ActionReference();
        var idLyr = charIDToTypeID( "Lyr " );
        var idOrdn = charIDToTypeID( "Ordn" );
        var idTrgt = charIDToTypeID( "Trgt" );
        ref368.putEnumerated( idLyr, idOrdn, idTrgt );
    desc1451.putReference( idnull, ref368 );
    var idT = charIDToTypeID( "T   " );
        var desc1452 = new ActionDescriptor();
        var idHrzn = charIDToTypeID( "Hrzn" );
        var idPxl = charIDToTypeID( "#Pxl" );
        desc1452.putUnitDouble( idHrzn, idPxl, 0.000000 );
        var idVrtc = charIDToTypeID( "Vrtc" );
        var idPxl = charIDToTypeID( "#Pxl" );
        desc1452.putUnitDouble( idVrtc, idPxl, 30.000000 );
    var idOfst = charIDToTypeID( "Ofst" );
    desc1451.putObject( idT, idOfst, desc1452 );
executeAction( idmove, desc1451, DialogModes.NO );

// =======================================================
var idCpTL = charIDToTypeID( "CpTL" );
executeAction( idCpTL, undefined, DialogModes.NO );

